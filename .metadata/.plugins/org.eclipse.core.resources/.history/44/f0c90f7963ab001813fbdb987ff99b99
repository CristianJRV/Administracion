package italika.administracion.empresas.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;

import italika.administracion.empresas.web.vo.EmpresaVo;
import lombok.extern.apachecommons.CommonsLog;


@CommonsLog
@RestController
@RequestMapping(value = "/empresa")
public class EmpresaController {
	
	@RequestMapping(method = RequestMethod.GET, produces = "application/json;charset=UTF-8")
	@ResponseBody
	public ResponseEntity<?> recuperarEmpresa() {
//		log.debug("Inicio");
		
		ResponseEntity<?> result = null;
		String msj = "mensaje satisfactorio.";
		result = new ResponseEntity<String>(msj, HttpStatus.OK);
		
//		log.debug("Fin");
		return result;
	}
	
	@RequestMapping(method = RequestMethod.POST, produces = "application/json;charset=UTF-8")
	public ResponseEntity<?> guardarEmpresa (@RequestBody EmpresaVo empresaVo) {
//		log.debug("Inicio");
		
		String msjError = null;
		String mensajeJson = "Registro correcto";
		ResponseEntity<?> result = null;

		/*try {

			mensajeJson = agendaFacade.guardar();
			result = new ResponseEntity<String>(mensajeJson , HttpStatus.CREATED);

		} catch (EmpleadosWebException ex) {
			
			log.error(ex.getMessage(), ex);
			result = new ResponseEntity<MensajeErrVo>(new MensajeErrVo(ex.getMessage(), ex.getCodError()), ex.getStateCode());
		} catch (Exception ex) {
			msjError = Constants.MSJ_EXCEPTION + "crear el evento.";
			log.error(msjError, ex);
			result = new ResponseEntity<MensajeErrVo>(new MensajeErrVo(msjError, Constants.CODE_ERROR_999), HttpStatus.INTERNAL_SERVER_ERROR);
		}*/
		result = new ResponseEntity<String>(mensajeJson , HttpStatus.CREATED);


//		log.debug("fin");
		return result;
	}

}
